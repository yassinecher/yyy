@import '@radix-ui/colors/black-alpha.css';
@import '@radix-ui/colors/indigo.css';
@import '@radix-ui/colors/mauve.css';
@import '@radix-ui/colors/purple.css';
@import '@radix-ui/colors/violet.css';



.block1 {
	position: relative;


    background: radial-gradient(black, #000000a8);
  border-radius:50%;
  padding: 10px;

}

.dark .block1 {
	position: relative;


	background: linear-gradient(0deg, #000, #272727);
  border-radius:50%;
  padding: 10px;

}
.dark .block1:before,.dark .block1:after {
	content: '';
	position: absolute;

	left: 0px;
	top: 0px;
   border-radius:50%;
	background: linear-gradient(45deg, #fb0094, #0000ff, #00ff00,#ffff00, #ff0000, #fb0094, 
		#0000ff, #00ff00,#ffff00, #ff0000);
    background-size: 400%;
	width: calc(100% );
	height: calc(100%);
	z-index: -1;
	animation: steam 20s linear infinite;
}


.block2 {
	position: relative;

    border-radius:5px;
}

@keyframes steam {
	0% {
		background-position: 0 0;
	}
	50% {
		background-position: 400% 0;
	}
	100% {
		background-position: 0 0;
	}
}
.cat{
	border-radius:5px 0 0 5px;
}
.block1:after {
	filter: blur(10px);
  
}
.block2:after {
	filter: blur(2px);
  
}
.bg-gold{
background-color: #fff9e6 ;
}
.blackbg{

  background-color: #222222;
}

  .menu-closed {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease-in-out;
  }
  
  .menu-open {
    max-height: 500px; /* Adjust the value as needed */
    overflow: visible;
    transition: max-height 0.3s ease-in-out;
  }
  
  .title{
   
    font-weight: bold;

 }
 .image-container {
	margin: auto;

}
 
.wave {
	position: relative;
	width: 200px;
	height: 200px;
	display: flex;
	justify-content: center;
	align-items: center;
	--shadowShift: 6px;
	--shadowBlur: 15px;
	--circleColor: rgb(241, 243, 246);
  }
  
  .wave__btn {
	z-index: 100;
	width: 80px;
	height: 80px;
	border-radius: 100%;
	border: none;
	background-color: white; /* Fix: Remove # before var() */

	transition: transform 0.2s ease-out;
  
	box-shadow: var(--shadowShift) 0 var(--shadowBlur) rgba(55, 84, 170, 0.2), /* Fix: Add commas between rgba values */
	  calc(var(--shadowShift) * -1) 0 var(--shadowBlur) rgba(255, 255, 255, 1);
  
	/*box-shadow: inset var(--shadowShift) 0 var(--shadowBlur) rgba(55, 84, 170, 0.2),
	  var(--shadowShift) 0 var(--shadowBlur) rgba(55, 84, 170, 0.2),
	  inset calc(var(--shadowShift) * -1) 0 var(--shadowBlur) rgba(255, 255, 255, 1),
	  calc(var(--shadowShift) * -1) 0 var(--shadowBlur) rgba(255, 255, 255, 1);*/
  }
  
  .wave__btn:hover {
	cursor: pointer;

  }
  
  .wave__btn::before {

	color: #31373f;
	font-weight: bold;
	font-size: 12px;
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	display: flex;
	justify-content: center;
	align-items: center;
	margin: auto;

  }
  
  .wave__btn:focus {
	outline: none;
  }
  
  .wave__btn:focus-visible {
	border-color: #89aedf;
  }
  
  .wave__btn:active {
	opacity: 0.7;
	transform: rotate(45deg) scale(1);
  }
  
  .wave__container {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
  }
  
  .wave__circle {
	position: absolute;
	background-color: transparent;
	border: 10px solid var(--circleColor);
	border-radius: 50%;
	box-shadow: inset var(--shadowShift) var(--shadowShift) var(--shadowBlur) rgba(55, 84, 170, 0.2),
				var(--shadowShift) var(--shadowShift) var(--shadowBlur) rgba(55, 84, 170, 0.2),
				inset calc(var(--shadowShift) * -1) calc(var(--shadowShift) * -1) var(--shadowBlur) rgb(167, 167, 167),
				calc(var(--shadowShift) * -1) calc(var(--shadowShift) * -1) var(--shadowBlur) rgb(167, 167, 167);
	filter: blur(3px);
  
	animation-name: ripple;
	animation-duration: 3s;
	animation-timing-function: cubic-bezier(0, 0.2, 0.8, 1);
	animation-iteration-count: infinite;
  }
  
  .wave__container .wave__circle:nth-child(2) {
	animation-delay: -1s;
  }
  
  .wave__container .wave__circle:nth-child(3) {
	animation-delay: -2s;
  }
  
  @keyframes ripple {
	0% {
	  top: 100px;
	  left: 100px;
	  width: 0;
	  height: 0;
	  opacity: 1;
	}
  
	100% {
	  top: 0;
	  left: 0;
	  width: 200px;
	  height: 200px;
	  opacity: 0;
	}
  }
  .tr-left{
	border-color: transparent #48abe0 transparent  transparent;
	border-width: 0 56px 56px 0;
  }
  .tr-right{

	border-width: 56px 0   0 56px;
    transform: rotateZ(90deg);
	border-color:transparent   rgb(255 247 237 / var(--tw-border-opacity)) transparent  rgb(255 247 237 / var(--tw-border-opacity));
  }
  .custom-nav{
	min-height: 100%;


	--s: 100px; /* control the size */
	 --c1: #ebc9bc;
	 --c2: #585858;
	 
	 --_g: 
		var(--c2) 6%  14%,var(--c1) 16% 24%,var(--c2) 26% 34%,var(--c1) 36% 44%,
		var(--c2) 46% 54%,var(--c1) 56% 64%,var(--c2) 66% 74%,var(--c1) 76% 84%,var(--c2) 86% 94%;
	 background:
	   radial-gradient(100% 100% at 100% 0,var(--c1) 4%,var(--_g),#0008 96%,#0000),
	   radial-gradient(100% 100% at 0 100%,#0000, #0008 4%,var(--_g),var(--c1) 96%)
	   var(--c1);
	 background-size: var(--s) var(--s);
  }

/* reset */
button,
p {
  all: unset;
}

.NavigationMenuRoot {
  position: relative;
  display: flex;
  justify-content: center;
  width: 100vw;
  z-index: 1;
}

.NavigationMenuList {
  display: flex;
  justify-content: center;
  background-color: white;
  padding: 4px;
  border-radius: 6px;
  list-style: none;
  box-shadow: 0 2px 10px var(--black-a7);
  margin: 0;
}

.NavigationMenuTrigger,
.NavigationMenuLink {
  padding: 8px 12px;
  outline: none;
  user-select: none;
  font-weight: 500;
  line-height: 1;
  border-radius: 4px;
  font-size: 15px;
  color: var(--violet-11);
}
.NavigationMenuTrigger:focus,
.NavigationMenuLink:focus {
  box-shadow: 0 0 0 2px var(--violet-7);
}
.NavigationMenuTrigger:hover,
.NavigationMenuLink:hover {
  background-color: var(--violet-3);
}

.NavigationMenuTrigger {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 2px;
}

.NavigationMenuLink {
  display: block;
  text-decoration: none;
  font-size: 15px;
  line-height: 1;
}

.NavigationMenuContent {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  animation-duration: 250ms;
  animation-timing-function: ease;
}
.NavigationMenuContent[data-motion='from-start'] {
  animation-name: enterFromLeft;
}
.NavigationMenuContent[data-motion='from-end'] {
  animation-name: enterFromRight;
}
.NavigationMenuContent[data-motion='to-start'] {
  animation-name: exitToLeft;
}
.NavigationMenuContent[data-motion='to-end'] {
  animation-name: exitToRight;
}
@media only screen and (min-width: 600px) {
  .NavigationMenuContent {
    width: auto;
  }
}

.NavigationMenuIndicator {
  display: flex;
  align-items: flex-end;
  justify-content: center;
  height: 10px;
  top: 100%;
  overflow: hidden;
  z-index: 1;
  transition: width, transform 250ms ease;
}
.NavigationMenuIndicator[data-state='visible'] {
  animation: fadeIn 200ms ease;
}
.NavigationMenuIndicator[data-state='hidden'] {
  animation: fadeOut 200ms ease;
}

.NavigationMenuViewport {
  position: relative;
  transform-origin: top center;
  margin-top: 10px;
  width: 100%;
  background-color: white;
  border-radius: 6px;
  overflow: hidden;
  box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px, hsl(206 22% 7% / 20%) 0px 10px 20px -15px;
  height: var(--radix-navigation-menu-viewport-height);
  transition: width, height, 300ms ease;
}
.NavigationMenuViewport[data-state='open'] {
  animation: scaleIn 200ms ease;
}
.NavigationMenuViewport[data-state='closed'] {
  animation: scaleOut 200ms ease;
}
@media only screen and (min-width: 600px) {
  .NavigationMenuViewport {
    width: var(--radix-navigation-menu-viewport-width);
  }
}

.List {
  display: grid;
  padding: 22px;
  margin: 0;
  column-gap: 10px;
  list-style: none;
}
@media only screen and (min-width: 600px) {
  .List.one {
    width: 500px;
    grid-template-columns: 0.75fr 1fr;
  }
  .List.two {
    width: 600px;
    grid-auto-flow: column;
    grid-template-rows: repeat(3, 1fr);
  }
}

.ListItemLink {
  display: block;
  outline: none;
  text-decoration: none;
  user-select: none;
  padding: 12px;
  border-radius: 6px;
  font-size: 15px;
  line-height: 1;
}
.ListItemLink:focus {
  box-shadow: 0 0 0 2px var(--violet-7);
}
.ListItemLink:hover {
  background-color: var(--mauve-3);
}

.ListItemHeading {
  font-weight: 500;
  line-height: 1.2;
  margin-bottom: 5px;
  color: var(--violet-12);
}

.ListItemText {
  color: var(--mauve-11);
  line-height: 1.4;
  font-weight: initial;
}

.Callout {
  display: flex;
  justify-content: flex-end;
  flex-direction: column;
  width: 100%;
  height: 100%;
  background: linear-gradient(135deg, var(--purple-9) 0%, var(--indigo-9) 100%);
  border-radius: 6px;
  padding: 25px;
  text-decoration: none;
  outline: none;
  user-select: none;
}
.Callout:focus {
  box-shadow: 0 0 0 2px var(--violet-7);
}

.CalloutHeading {
  color: white;
  font-size: 18px;
  font-weight: 500;
  line-height: 1.2;
  margin-top: 16px;
  margin-bottom: 7px;
}

.CalloutText {
  color: var(--mauve-4);
  font-size: 14px;
  line-height: 1.3;
}

.ViewportPosition {
  position: absolute;
  display: flex;
  justify-content: center;
  width: 100%;
  top: 100%;
  left: 0;
  perspective: 2000px;
}

.CaretDown {
  position: relative;
  color: var(--violet-10);
  top: 1px;
  transition: transform 250ms ease;
}
[data-state='open'] > .CaretDown {
  transform: rotate(-180deg);
}

.Arrow {
  position: relative;
  top: 70%;
  background-color: white;
  width: 10px;
  height: 10px;
  transform: rotate(45deg);
  border-top-left-radius: 2px;
}

@keyframes enterFromRight {
  from {
    opacity: 0;
    transform: translateX(200px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes enterFromLeft {
  from {
    opacity: 0;
    transform: translateX(-200px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes exitToRight {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(200px);
  }
}

@keyframes exitToLeft {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(-200px);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: rotateX(-30deg) scale(0.9);
  }
  to {
    opacity: 1;
    transform: rotateX(0deg) scale(1);
  }
}

@keyframes scaleOut {
  from {
    opacity: 1;
    transform: rotateX(0deg) scale(1);
  }
  to {
    opacity: 0;
    transform: rotateX(-10deg) scale(0.95);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}