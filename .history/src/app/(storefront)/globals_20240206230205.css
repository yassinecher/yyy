@tailwind base;
@tailwind components;
@tailwind utilities;
html,
body,:root{
  height: 100%;
  width: 100%;
}



.hx-wrap {
  position: fixed;
  min-width: 100%;
  top: 0;
  left: 0;
  min-height: 100vh;
  margin: 3em auto 0;
   z-index: -999;
background-color: azure;
  &:before {
    content: "";
    padding-top: 56.25%;
    display: block;
  }
}
.hx-image {
  position: absolute;
  top: 0;
  left: 0;
  width: 100px; /* Adjust the width and height of the sphere as needed */
  height: 100px;
  border-radius: 50%; /* Ensures the element appears as a circle */
  background-color: rgb(80, 23, 97); /* Initial background color */
  box-shadow: 0 0 20px 10px rgba(255, 255, 255, 0.8); /* Initial box shadow for glowing effect */
  animation: glowSphere 10s ease-in-out infinite alternate, moveSphereX 10s linear infinite, moveSphereY 15s linear infinite;
}

@keyframes glowSphere {
  0% {
    box-shadow: 0 0 20px 10px rgb(199, 15, 255);
  }
  100% {
    box-shadow: 0 0 50px 20px rgb(58, 34, 34);
  }
}

@keyframes moveSphereX {
  0%, 100% {
    left: 0;
  }
  50% {
    left: calc(100% - 100px); /* Adjust the width of the sphere */
  }
}

@keyframes moveSphereY {
  0%, 100% {
    top: 0;
  }
  50% {
    top: calc(100% - 100px); /* Adjust the height of the sphere */
  }
}

.hexa-list {
  background-color: #857a6800;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;;
  overflow: hidden;
  perspective: 1000px;
  transform-style: preserve-3d;
}

.hexa {
  width: 72px;
  height: 40px;
  position: absolute;
  color: #181111;
  background: currentColor;
  transform: scale(1) translate3d(0,0,0);
  
  transition: .3s color ease-in;
  
  &:hover {
    color: #201b1b;
  }
  
  animation-duration: .8s;
  animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1.275);

  &:before, 
  &:after {
    content: "";
    position: absolute;
    border-style: solid;
    border-color: transparent transparent currentColor;
    border-width: 10px 18px;
    top: -20px;
  }
  &:after {
    top: auto;
    bottom: -20px;
    border-color: currentColor transparent transparent;
  }

  &.active {
    animation-name: scale;
  }
}

@keyframes scale {
  0% {
    transform: scale(1) translate3d(0,0,0);
  }
  20% {
    transform: scale(0.8) translate3d(0,0,-400px);
  }
  100% {
    transform: scale(1) translate3d(0,0,0);
  }
}

.hx-text {
  text-align: center;
  font-family: sans-serif;
  padding: 1em;
}

html,
body,:root {
  min-height: 100%;

}



.OverlayS{
  min-height: 100%;
  width: 100%;
  background: rgba(213, 151, 255, 0); 
}
.dark .OverlayS{
  background: rgba(53, 15, 71, 0);


}

@layer base {
  :root {
    --background: 45 100% 97%; /* Light amber background color (HSL: 45, 100%, 97%) */
    --foreground: 0 0% 0%; /* Black foreground color (HSL: 0, 0%, 0%) */
    
    --muted: 40 80% 90%; /* Slightly desaturated amber muted color (HSL: 40, 80%, 90%) */
    --muted-foreground: 0 0% 0%; /* Black foreground color */
    
    --popover: 45 100% 97%; /* Light amber background color */
    --popover-foreground: 0 0% 0%; /* Black foreground color */
    
    --card: 45 100% 97%; /* Light amber background color */
    --card-foreground: 0 0% 0%; /* Black foreground color */
    
    --border: 40 80% 90%; /* Slightly desaturated amber border color (HSL: 40, 80%, 90%) */
    --input: 40 80% 90%; /* Slightly desaturated amber input color (HSL: 40, 80%, 90%) */
    
    --primary:    38 100% 50%; /* Medium amber primary color (HSL: 45, 100%, 50%) */
    --primary-foreground: 0 0% 100%; /* White foreground color */
    
    --secondary: 40 80% 90%; /* Slightly desaturated amber secondary color (HSL: 40, 80%, 90%) */
    --secondary-foreground: 0 0% 0%; /* Black foreground color */
    
    --accent: 40 80% 90%; /* Slightly desaturated amber accent color (HSL: 40, 80%, 90%) */
    --accent-foreground: 0 0% 0%; /* Black foreground color */
    
    --destructive: 0 100% 50%; /* Red destructive color (HSL: 0, 100%, 50%) */
    --destructive-foreground: 0 0% 100%; /* White foreground color */
    
    --ring: 40 80% 90%; /* Slightly desaturated amber ring color (HSL: 40, 80%, 90%) */
    
    --radius: 0.5rem;
    
  }


  .dark {
    --background: 222.2 84% 0%;
    --foreground: 210 40% 98%;

  --muted: 217.2 32.6% 17.5%;
  --muted-foreground: 215 20.2% 65.1%;

  --popover: 222.2 84% 0%;
  --popover-foreground: 210 40% 98%;

  --card: 222.2 84% 0%;
  --card-foreground: 210 40% 98%;

  --border: 217.2 32.6% 17.5%;
  --input: 217.2 32.6% 17.5%;

  --primary: 210 40% 98%;
  --primary-foreground: 222.2 47.4% 11.2%;

  --secondary: 217.2 32.6% 17.5%;
  --secondary-foreground: 210 40% 98%;

  --accent: 217.2 32.6% 17.5%;
  --accent-foreground: ;

  --destructive: 0 62.8% 30.6%;
  --destructive-foreground: 0 85.7% 97.3%;

  --ring: 40 80% 90%;

  --radius: 0.5rem;
  }
}
 
@layer base {
  * {
    @apply border-border;
    --tw-ring-offset-color: #08080800 !important;
  }
  body {
    @apply bg-background text-foreground;
    height: 100%;
  }
}
input[type="search"]::-webkit-search-cancel-button {
 -webkit-appearance: none;
  display: inline-block;
  width: 12px;
  height: 12px;
  margin-left: 10px;
  opacity: 40%;
  background:
    linear-gradient(45deg, rgba(0,0,0,0) 0%,rgba(0,0,0,0) 43%,#000 45%,#000 55%,rgba(0,0,0,0) 57%,rgba(0,0,0,0) 100%),
    linear-gradient(135deg, transparent 0%,transparent 43%,#000 45%,#000 55%,transparent 57%,transparent 100%);
}

/* Remove default checkbox styling */
input[type="checkbox"] {
  -webkit-appearance: none;
  appearance: none;
  color: #ffa100;
  outline: 0;
}

/* Style for focused checkbox */
input[type="checkbox"]:focus {
  outline: 0; /* Remove default outline */
}

/* Style for focused and visible checkbox */
input[type="checkbox"]:focus-visible {
  outline: 0; /* Remove default outline */
  outline-offset: 0; /* Adjust outline offset if needed */
}
[type='checkbox']:focus,[type='radio']:focus {
  outline: 0px solid transparent;
  outline-offset: 2px;
  --tw-ring-inset: var(
  --tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 2px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #ffa100;
  --tw-ring-offset-shadow: var(
  --tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(
  --tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.strikethrough {
  position: relative;
}
.strikethrough:before {
  position: absolute;
  content: "";
  left: 0;
  top: 50%;
  right: 0;
  border-top: 2px solid !important;

  border-color: inherit;

  -webkit-transform:rotate(-5deg);
  -moz-transform:rotate(-5deg);
  -ms-transform:rotate(-5deg);
  -o-transform:rotate(-5deg);
  transform:rotate(-5deg);
}
.strikethrough::after {
  position: absolute;
  content: "";
  left: 0;
  top: 50%;
  right: 0;
  border-top: 3px solid !important;
  border-color: inherit;

  -webkit-transform:rotate(5deg);
  -moz-transform:rotate(5deg);
  -ms-transform:rotate(5deg);
  -o-transform:rotate(5deg);
  transform:rotate(5deg);
}
