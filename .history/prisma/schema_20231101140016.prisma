// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String   @unique
  password  String
  CreatedAt DateTime @default(now())
  UpdateAt  DateTime @default(now())
  role      String   @default("user")
}



model Product {
  id            String       @id @default(uuid())
  categoryId    String
  name          String
  dicountPrice  Decimal      @default(0)
  description   String    
  price         Decimal
  stock         Decimal      
  isFeatured    Boolean      @default(false)
  isArchived    Boolean      @default(false)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  template      String       @default("")
  useTemplate   Boolean      @default(false)
  category      Category     @relation("CategoryToProduct", fields: [categoryId], references: [id])
  images        Image[]
  orderItems    OrderItem []
  motherboard   Motherboard[]       @relation("ProductToMotherboard")
  cpus          Processor[]       @relation("ProductToCPU")
  gpus          Gpu[]       @relation("ProductToGPU")
  memories      Memory[]    @relation("ProductToMemory")
  powersupplies Powersupply[] @relation("ProductToPowersupply")
  storages      Harddisk[]   @relation("ProductToStorage")
  cases         PCcase[]    @relation("ProductToPCCase")
  additionalDetails Field[]
}

model Field{
   id        String   @id @default(uuid())
  productId String
  name       String
  value       String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([productId])
}
model Category {
  id          String    @id @default(uuid())
   name        String
  products    Product[] @relation("CategoryToProduct")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  navLab      NavLab    @default(COMPONENTS)

}
model Order {
  id         String      @id @default(uuid())
  isPaid     Boolean     @default(false)
  phone      String      @default("")
  address    String      @default("")
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  orderItems OrderItem[]
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String
  productId String
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@index([orderId])
  @@index([productId])
}

model Image {
  id        String   @id @default(uuid())
  productId String
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([productId])
}






model CompatibiltyProfile{
   id             String             @id @default(uuid())
   name           String
   component      



}
model Motherboard {
  id             String             @id @default(uuid())
  products           Product[] @relation("ProductToMotherboard") 
}

model Processor {
  id                    String              @id @default(uuid())
  products           Product[] @relation("ProductToCPU")
 }

model Memory {
  id          String          @id @default(uuid())
  products           Product[] @relation("ProductToMemory")
  }


model Powersupply {
  id                String            @id @default(uuid())

  products           Product[] @relation("ProductToPowersupply")
 
} 
model Gpu {
  id                String          @id @default(uuid())
  products           Product[] @relation("ProductToGPU")
  
}
model PCcase {
  id                         String                         @id @default(uuid())
  product                    Product[] @relation("ProductToPCCase")
 
}
model Harddisk {
  id                  String                    @id @default(uuid())
  product             Product[]  @relation("ProductToStorage")
 
}

model Slide {
  id         String     @id @default(uuid())
  title         String
  description      String
  imageUrl   String
  url        String
  discount   Int        @default(0)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}


enum NavLab {
  PCS
  COMPONENTS
  PEREPHRALS
  PACKS
}
enum Componenets {
  MOTHERBOARD
  CPU
  GPU
  RAM
  DISK
  CASE
  POWERSUPPLY
}
model SearchQuery {
  id    String @id @default(cuid())
  query String
}