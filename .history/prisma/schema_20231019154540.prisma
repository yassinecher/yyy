// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id Int       @id @default(autoincrement())
  email   String    @unique
  username    String @unique
  password String 
  CreatedAt DateTime @default(now())
  UpdateAt DateTime @default(now())
  role String @default("user")
}

model Billboard {
  id          String @id @default(uuid())
    label       String
  imageUrl    String
  categories  Category[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

}
model Motherboard {
  id              String             @id @default(uuid())
  product         Product?
  manufacturerId  String
  manufacturer    Manufacturer        @relation("ManufacturerToMotherboard", fields: [manufacturerId], references: [id])
  ramslotsId      String
  ramslots        RamSlots            @relation(fields: [ramslotsId], references: [id])
  chipsetId       String
  chipset         MotherboardChipset  @relation(fields: [chipsetId], references: [id])
  cpusupportId    String
  cpusupport      CPUSupport          @relation(fields: [cpusupportId], references: [id])
  guaranteeId     String
  guarantee       Guarantee           @relation(fields: [guaranteeId], references: [id])
  formatId        String
  format          MotherboardFormat   @relation(fields: [formatId], references: [id])
}

model RamSlots {
  id          String     @id @default(uuid())
  number      Int
  motherboards Motherboard[] 
}

model MotherboardChipset {
  id          String @id @default(uuid())
  name        String
  motherboards Motherboard[]
}

model CPUSupport {
  id          String @id @default(uuid())
  name        String
  motherboards Motherboard[]
}

model Guarantee {
  id          String @id @default(uuid())
  name        String
  motherboards Motherboard[]
}

model MotherboardFormat {
  id          String @id @default(uuid())
  name        String
  motherboards Motherboard[]
}

model Manufacturer{
    id          String @id @default(uuid())
    name        String
    image       Image2?
    motherboards  Motherboard[] @relation("ManufacturerToMotherboard")

}



model Product {
  id            String    @id @default(uuid())
  categoryId    String
  name          String
  price         Decimal
  isFeatured    Boolean     @default(false)
  isArchived    Boolean     @default(false)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  template      String      @default("")
  useTemplate   Boolean      @default(false)
  category      Category    @relation("CategoryToProduct", fields: [categoryId], references: [id])
  images        Image[]     
  orderItems    OrderItem[]
  motherboardId String? @unique
  motherboard Motherboard? @relation(fields: [motherboardId], references: [id])

  @@index([motherboardId], name: "unique_motherboard")
}

model Category {
  id          String      @id @default(uuid())
  billboardId String      // Foreign Key to Billboard
  billboard   Billboard   @relation(fields: [billboardId], references: [id])
  name        String
  products    Product[]   @relation("CategoryToProduct")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@index([billboardId])
}

model Order {
  id         String      @id @default(uuid())
  isPaid     Boolean     @default(false)
  phone      String      @default("")
  address    String      @default("")
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  orderItems OrderItem[]

}
model OrderItem {
  id        String  @id @default(uuid())
  orderId   String
  productId String
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@index([orderId])
  @@index([productId])
}


model Image {
  id        String   @id @default(uuid())
  productId String
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([productId])
}
model Image2 {
 id            String   @id @default(uuid())
  manufacturerId String 
  url           String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  manufacturer   Manufacturer @relation(fields: [manufacturerId], references: [id], onDelete: Cascade)
@@index([manufacturerId])
}
